name: colcon workspace

on: [push, pull_request]

jobs:
  # build on Ubuntu docker images
  build_linux:
    name: "Ubuntu (${{ matrix.ros_distribution }})"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - docker_image: ubuntu:20.04
            ros_distribution: noetic
            ros_version: 1

          - docker_image: ubuntu:22.04
            ros_distribution: humble
            ros_version: 2

          - docker_image: ubuntu:24.04
            ros_distribution: jazzy
            ros_version: 2

    container:
      image: ${{ matrix.docker_image }}

    steps:
      - name: install core dependencies
        run: |
          apt update
          apt install --no-install-recommends -y git ca-certificates

      - uses: actions/checkout@v4

      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.7

      - name: ROS 1 CI Action
        if: ${{ matrix.ros_version == 1 }}
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          package-name: apriltag
          target-ros1-distro: ${{ matrix.ros_distribution }}

      - name: ROS 2 CI Action
        if: ${{ matrix.ros_version == 2 }}
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          package-name: apriltag
          target-ros2-distro: ${{ matrix.ros_distribution }}


  # build on Windows native
  build_windows:
    name: "Windows (${{ matrix.ros_distribution }})"

    runs-on: windows-latest

    strategy:
      matrix:
        include:
          - ros_distribution: noetic
            ros_version: 1

          - ros_distribution: humble
            ros_version: 2

          - ros_distribution: jazzy
            ros_version: 2

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.7

      - name: ROS 1 CI Action
        if: ${{ matrix.ros_version == 1 }}
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          package-name: apriltag
          target-ros1-distro: ${{ matrix.ros_distribution }}

      - name: ROS 2 CI Action
        if: ${{ matrix.ros_version == 2 }}
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          package-name: apriltag
          target-ros2-distro: ${{ matrix.ros_distribution }}

  # build on macOS native
  build_macos:
    name: "macOS (${{ matrix.ros_distribution }})"

    runs-on: macos-latest

    strategy:
      matrix:
        ros_distribution: [humble, jazzy]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.7

      - name: ROS 2 CI Action
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          package-name: apriltag
          target-ros2-distro: ${{ matrix.ros_distribution }}
